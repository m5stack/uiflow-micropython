# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016 - 2024 M5Stack Technology Co., Ltd
# This file is distributed under the same license as the UIFlow2 Programming
# Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: UIFlow2 Programming Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-11 15:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../en/software/umqtt.rst:2 9c4528d4c0ea4b2facfffb674823b5d1
msgid ":py:mod:`umqtt` -- a simple MQTT client"
msgstr ""

#: ../../en/software/umqtt.rst:9 76f2abf5773743a384bf67778903bd48
msgid ""
"umqtt is a simple MQTT client for MicroPython. (Note that it uses some "
"MicroPython shortcuts and doesn't work with CPython)."
msgstr "umqtt 是 MicroPython 的简单 MQTT 客户端。（请注意，它使用了一些MicroPython 快捷方式，不适用于 CPython ）。"

#: ../../en/software/umqtt.rst:13 c9dd2a02f92a48c0a25f2276aabda22a
msgid "Supported MQTT features"
msgstr "支持的 MQTT 功能"

#: ../../en/software/umqtt.rst:15 232b92430214489da5b3d4996a85da6e
msgid ""
"QoS 0 and 1 are supported for both publish and subscribe. QoS2 isn't "
"supported to keep code size small. Besides ClientID, only \"clean "
"session\" parameter is supported for connect as of now."
msgstr "发布和订阅均支持 QoS 0 和 1。 不支持 QoS2 以保持较小的代码大小。 除了 ClientID 之外，目前仅支持“clean session”参数进行连接。"

#: ../../en/software/umqtt.rst:20 357bfcd335cf4afeb1299d2a8ca1fdf9
msgid "Design requirements"
msgstr "设计要求"

#: ../../en/software/umqtt.rst:22 0c0cae8eb67c4a58a0ecf03ce00eee8e
msgid "Memory efficiency."
msgstr "内存效率。"

#: ../../en/software/umqtt.rst:23 0014d18b466d41eb80270f8dee968d8d
msgid "Avoid infamous design anti-patterns like \"callback hell\"."
msgstr "避免臭名昭著的设计反模式，例如“回调地狱”。"

#: ../../en/software/umqtt.rst:24 a0e9b7dbb1e149ddace547e7814e637e
msgid ""
"Support for both publishing and subscription via a single client object "
"(another alternative would be to have separate client classes for "
"publishing and subscription)."
msgstr "通过单个客户端对象支持发布和订阅（另一种选择是使用单独的客户端类来进行发布和订阅）。"

#: ../../en/software/umqtt.rst:29 7ea4891ce0bc4524a2e940bbc7c21a32
msgid "MQTT client with automatic reconnect"
msgstr "具有自动重新连接功能的 MQTT 客户端"

#: ../../en/software/umqtt.rst:31 1655b82992f34d869fdeacc13f064954
msgid ""
"There's a separate `umqtt.robust`_ module which builds on `umqtt.simple`_"
" and adds automatic reconnect support in case of network errors. Please "
"see its |umqtt.robust|_ for further details."
msgstr "有一个单独的 `umqtt.robust`_ 模块，它构建在 `umqtt.simple`_ 之上，并在出现网络错误时添加自动重新连接支持。请参阅其 |umqtt.robust|_ 了解更多详细信息。"

#: ../../en/software/umqtt.rst:36 aba19d9dac4b400c920a2eb4ccaadec8
msgid "MQTT client with SSL file"
msgstr "带有 SSL 文件的 MQTT 客户端"

#: ../../en/software/umqtt.rst:38 090f3df32d06470993cda7c9aeb7c13a
msgid ""
"There is a separate `umqtt.default`_ module that builds on top of "
"`umqtt.robust`_ and supports SSL certificates passed in as files and "
"callback delivery for each subscribed topic. Please see its "
"|umqtt.default|_ for further details."
msgstr "有一个单独的 `umqtt.default`_ 模块，它构建在 `umqtt.robust`_ 之上，并且支持 SSL 证书以文件方式传入并为每一个订阅主题设置回调传递。请参阅其 |umqtt.default|_ 了解更多详细信息。"

#: ../../en/software/umqtt.rst:44 db09c1337f7648d799acd34926a06b52
msgid "API design"
msgstr "API设计"

#: ../../en/software/umqtt.rst:46 564a88c38721480eac22fea38e8abf6d
msgid "Based on the requirements above, there are following API traits:"
msgstr "基于上述需求， API 具有以下特征："

#: ../../en/software/umqtt.rst:48 1a200fa0983748788ad2796beadc783e
msgid ""
"All data related to MQTT messages is encoded as bytes. This includes both"
" message content AND topic names (even though MQTT spec states that topic"
" name is UTF-8 encoded). The reason for this is simple: what is received "
"over network socket is binary data (bytes) and it would require extra "
"step to convert that to a string, spending memory on that. Note that this"
" applies only to topic names (because they can be both sent and "
"received). Other parameters specified by MQTT as UTF-8 encoded (e.g. "
"ClientID) are accepted as strings."
msgstr "所有与 MQTT 消息相关的数据都编码为字节。这包括消息内容和主题名称（即使 MQTT 规范声
  明主题名称是 UTF-8 编码的）。原因很简单：通过网络套接字接收到的是二进制数据（字节），
  需要额外的步骤将其转换为字符串，从而消耗内存。请注意，这仅适用于主题名称（因为它们
  既可以发送也可以接收）。 MQTT 指定为 UTF-8 编码的其他参数（例如 ClientID ）被接受为
  字符串。"

#: ../../en/software/umqtt.rst:56 4e8d8f44bc4542efbc1c163258ef2121
msgid ""
"Subscribed messages are delivered via a callback. This is to avoid using "
"a queue for subscribed messages, as otherwise they may be received at any"
" time (including when client expects other type of server response, so "
"there're 2 choices: either deliver them immediately via a callback or "
"queue up until an \"expected\" response arrives). Note that lack of need "
"for a queue is delusive: the runtime call stack forms an implicit queue "
"in this case. And unlike explicit queue, it's much harder to control. "
"This design was chosen because in a common case of processing subscribed "
"messages it's the most efficient. However, if in subscription callback, "
"new messages of QoS>0 are published, this may lead to deep, or infinite "
"recursion (the latter means an application will terminate with "
"``RuntimeException``)."
msgstr "订阅的消息通过回调传递。这是为了避免对订阅的消息使用队列，否则它们可能会随时收到（包
  括当客户端期望其他类型的服务器响应时），因此有两种选择：要么通过回调立即传递它们，要
  么排队直到“预期”响应到达）。请注意，不需要队列是错误的：在这种情况下，运行时调用堆栈
  形成隐式队列。 与显式队列不同，它更难控制。选择这种设计是因为在处理订阅消息的常见情
  况下，它是最有效的。然而，如果在订阅回调中，发布了 QoS > 0 的新消息，这可能会导致
  深度或无限递归（后者意味着应用程序将因 “RuntimeException” 而终止）。"

#: ../../en/software/umqtt.rst:70 995fd1ecdc814ac98539d22af6984a1c
msgid "Usage Model::"
msgstr ""

#: ../../en/software/umqtt.rst:82 435ef6cf23be401a8dec948303aa073a
msgid "Classes"
msgstr ""

