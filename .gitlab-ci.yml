variables:
  DEBIAN_FRONTEND: noninteractive
  ESP_IDF_SRC_DIR: $CI_PROJECT_DIR/esp-idf

cache:
  key: "$CI_PROJECT_ID-esp-idf-v541"
  paths:
    - $ESP_IDF_SRC_DIR
  policy: pull-push
  when: on_success

stages:
  - code_format
  - docs
  - build
  - release


code-format:
  stage: code_format
  before_script:
    - export PATH="$HOME/.local/bin:$PATH"
  script:
    - make -C m5stack submodules
    - source tools/ci.sh && ci_code_formatting_setup
    - source tools/ci.sh && ci_code_formatting_run
    - git diff --exit-code
  tags:
    - uiflow-firmware


build-job:
  stage: build
  script:
    - sudo apt-get update -qy
    - sudo apt-get install git wget flex bison gperf quilt python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0 -y
    - source tools/ci.sh && ci_esp32_idf541_setup
    - source tools/ci.sh && ci_esp32_nightly_build
  artifacts:
    paths:
      - m5stack/build-*/uiflow-*-*.bin
      - third-party/build-*/uiflow-*-*.bin
  tags:
    - uiflow-firmware


build-docs:
  stage: docs
  script:
    - echo "Building the documentation..."
    - cd docs
    - python3 -m venv .
    - source bin/activate
    - pip3 install -r requirements.txt
    - sphinx-build -W -b html -D language=zh_CN ./en/ build/html/zh_CN
    - sphinx-build -W -b html -D language=en ./en/ build/html/en
    - cd -
  artifacts:
    paths:
      - docs/build/
  tags:
    - uiflow-firmware


release_job:
  stage: release
  script:
    - echo "Releasing the M5Burn..."
    - python ./tools/release.py
  tags:
    - uiflow-firmware
  rules:
    - if: '$CI_COMMIT_TAG =~ /^release\/[0-9]+\.[0-9]+\.[0-9]+$/ && $CI_COMMIT_REF_SLUG == "develop_m5things"'
